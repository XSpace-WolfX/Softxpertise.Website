@page "/contact"

@using Microsoft.Extensions.Localization
@using Softxpertise.Website.Models
@using Softxpertise.Website.Resources
@using Softxpertise.Website.Services

@inject ContactService ContactService
@inject IHttpClientFactory HttpClientFactory
@inject IStringLocalizer<TextualLanguage> Localizer

<PageTitle>@Localizer["ContactPage"]</PageTitle>

<section class="contact py-5">
    <div class="container mt-5">
        <h2 class="text-center text-uppercase">@Localizer["ContactTitle"]</h2>
        <p class="text-center">@Localizer["ContactTitleText"]</p>
        <div class="card shadow-sm mt-4">
            <EditForm Model="@formModel" OnValidSubmit="SubmitForm">
                <ValidationSummary />
                <div class="form-group">
                    <label for="userName">@Localizer["ContactName"]:</label>
                    <InputText id="userName" @bind-Value="formModel.UserName" class="form-control" />
                </div>
                <div class="form-group mt-3">
                    <label for="userEmail">@Localizer["ContactEmail"]:</label>
                    <InputText id="userEmail" @bind-Value="formModel.UserEmail" class="form-control" />
                </div>
                <div class="form-group mt-3">
                    <label for="userSubject">@Localizer["ContactSubject"]:</label>
                    <InputText id="userSubject" @bind-Value="formModel.UserSubject" class="form-control" />
                </div>
                <div class="form-group mt-3">
                    <label for="userMessage">@Localizer["ContactMessage"]:</label>
                    <InputTextArea id="userMessage" @bind-Value="formModel.UserMessage" class="form-control" />
                </div>
                <button type="submit" class="btn btn-primary mt-4 w-100" disabled="@isSubmitting">
                    @(isSubmitting ? "Sending..." : Localizer["ContactButton"])
                </button>
            </EditForm>
        </div>
    </div>
</section>

@if (!string.IsNullOrEmpty(responseMessage))
{
    <div class="alert alert-info mt-3">@responseMessage</div>
}

@code {
    private ContactModel formModel = new(); // Modèle du formulaire
    private string? responseMessage;       // Message de réponse
    private bool isSubmitting = false;     // Indique si le formulaire est en cours d'envoi

    private async Task SubmitForm()
    {
        isSubmitting = true;
        responseMessage = null;

        try
        {
            // Appeler le service pour envoyer les données du formulaire
            var (success, message) = await ContactService.SubmitContactForm(formModel);

            responseMessage = message;

            if (success)
            {
                // Réinitialiser le formulaire si l'envoi a réussi
                formModel = new ContactModel();
            }
        }
        catch (Exception ex)
        {
            responseMessage = $"An unexpected error occurred: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
